package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_config", "ts_library")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")
load("@build_bazel_rules_nodejs//:index.bzl", "copy_to_bin", "nodejs_binary")

load(":dependencies.bzl", "NPM_DEPENDENCIES")

# Additional to the compiled files we need the jsons files for execution
copy_to_bin(
    name = "copy_jsons",
    srcs = [
        "collection.json",
        "builders.json",
        "package.json",
    ] + glob(
        include = ["src/**/*.json"],
    ),
)

nodejs_binary(
    name = "affected_args",
    data = ["//libs/workspace"],
    entry_point = ":src/scripts/affected-args.bundled.js",
)

# nodejs_binary(
#     name = "run_parallel",
#     data = ["//libs/workspace"],
#     entry_point = ":src/scripts/run-parallel.bundled.js",
# )

rollup_bundle(
    name = "workspace",
    args = [
        "-e",
        ",".join(NPM_DEPENDENCIES),
    ],
    config_file = ":rollup.config.js",
    entry_point = "index",
    # entry_points = {
    #     "src/scripts/affected-args.ts": "src/scripts/affected-args.bundled",
    #     "src/scripts/run-parallel.ts": "src/scripts/run-parallel.bundled",
    #     "src/builders/barista-build/builder.ts": "src/builders/barista-build/builder.bundled",
    # },
    # format = "cjs",
    # output_dir = True,
    sourcemap = "false",
    deps = [
        "@npm//@rollup/plugin-json",
        "@npm//@rollup/plugin-node-resolve",
        "compile",
    ],
)

ts_library(
    name = "compile",
    srcs = glob(
        include = ["**/*.ts"],
        exclude = [
            "**/*.spec.ts",
            "src/test-setup.ts",
        ],
    ),
    data = [":copy_jsons"],
    module_name = "@dynatrace/workspace",
    tsconfig = "tsconfig_lib",
    deps = ["@npm//" + dep for dep in NPM_DEPENDENCIES] + [
        "//libs/shared/node",
    ],
)

ts_config(
    name = "tsconfig_lib",
    src = "tsconfig.lib.json",
    deps = [
        "tsconfig.json",
        "//:tsconfig.json",
    ],
)
