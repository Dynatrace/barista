@import '../core/style/variables';

$dt-loading-spinner-default-size: 30px;
$dt-loading-spinner-small-size: 15px;
$dt-loading-spinner-offset: 22px * 3.1416; // r(-gap)*2*3.14
$dt-loading-spinner-duration: 1700ms;
$dt-loading-spinner-ease: cubic-bezier(0.645, 0.045, 0.355, 1);

:host {
  display: inline-block;
  width: $dt-loading-spinner-default-size;
  height: $dt-loading-spinner-default-size;
}

// There is an issue in angular with the combination of :host ans :host-context.
// As a workaround you have to move the :host-context after the :host selector
:host :host-context(.dt-form-field),
:host :host-context(.dt-button) {
  width: $dt-loading-spinner-small-size;
  height: $dt-loading-spinner-small-size;
  min-width: $dt-loading-spinner-small-size; // This overrides the min-with requirement for prefix/suffix
}

.dt-loading-spinner-svg {
  display: block;
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  stroke-width: 4px;
  stroke: $logolime;
  fill: none;
  // stylelint-disable indentation
  -webkit-animation: dt-loading-spinner-spin $dt-loading-spinner-duration * 2 linear infinite;
          animation: dt-loading-spinner-spin $dt-loading-spinner-duration * 2 linear infinite;
  // stylelint-enable
}

:host-context(.dt-form-field) .dt-loading-spinner-svg {
  stroke: $gray-500;
}

:host-context(.dt-button) {
  // align icon with the baseline of the text
  vertical-align: -3px;
  margin-right: 8px;

  .dt-loading-spinner-svg {
    stroke: #ffffff;
  }
}

:host-context(.dt-button-secondary) .dt-loading-spinner-svg {
  stroke: $gray-300;
}

.dt-loading-spinner-path {
  stroke-dasharray: $dt-loading-spinner-offset;
  // stylelint-disable indentation
  -webkit-transform-origin: center;
          transform-origin: center;
  -webkit-animation: dt-loading-spinner-dash $dt-loading-spinner-duration $dt-loading-spinner-ease infinite;
          animation: dt-loading-spinner-dash $dt-loading-spinner-duration $dt-loading-spinner-ease infinite;
  // stylelint-enable
}

@-webkit-keyframes dt-loading-spinner-spin {
  // stylelint-disable indentation
  0% {
    -webkit-transform: rotate(0);
            transform: rotate(0);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
  // stylelint-enable
}

@keyframes dt-loading-spinner-spin {
  // stylelint-disable indentation
  0% {
    -webkit-transform: rotate(0);
            transform: rotate(0);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
  // stylelint-enable
}

@-webkit-keyframes dt-loading-spinner-dash {
  0% { stroke-dashoffset: 138.2304px; }
  50% { stroke-dashoffset: 86.394px; }
  100% { stroke-dashoffset: 0; }
}

@keyframes dt-loading-spinner-dash {
  0% { stroke-dashoffset: 138.2304px; }
  50% { stroke-dashoffset: 86.394px; }
  100% { stroke-dashoffset: 0; }
}
