{
  "extends": [
    "@dynatrace/angular-lint-rules/tslint"
  ],
  "rulesDirectory": [
    "./tools/tslint-rules/"
  ],
  "rules": {
    // this needs to be disabled since having multiple components/directives
    // in one file is sometimes suitable due to the size and sharing of small pieces of code
    "max-classes-per-file": false,
    // no implicit dependencies need to be false since we have cross references inside the modules which are not listed as a dependency
    "member-access": [true, "no-public"],
    "member-ordering": false,
    // Disabled as it would also force new lines for only one operator or function call
    "newline-per-chained-call": false,
    // Changing it as it does also enforce this rule for very simple code
    "newline-before-return": false,
    // it is in some places essential for change detection
    "no-empty": false,
    // This is essential for specific checks where typescript has a hard time resolving the type of it.
    // This would the result in using checks (like instanceof) in some places that are slower.
    "no-non-null-assertion": false,
    // Static only classes are needed for us to do angular modules that have forRoot or forChild
    "no-unnecessary-class": false,
    // Disabled, as it would force us to use bind or some other stuff to prevent "this"
    // in callbacks instead of arrow functions
    "no-unnecessary-callback-wrapper": false,
    "no-null-keyword": false,
    "no-submodule-imports": false,
    "object-literal-sort-keys": false,
    // Disabled otherwise normal functions like class mixins are not possible
    "only-arrow-functions": false,
    "one-line": [
      true,
      "check-catch",
      "check-else",
      "check-open-brace",
      "check-whitespace"
    ],
    // ordering is better to be logically grouped than alphabetical
    "ordered-imports": false,
    // Turning it off as it would enforce readonly on private properties set via DI in the constructor
    // It also has an issue within mixin classes.
    "prefer-readonly": false,
    // Turning it of so it does not throw on default value assertion like this: variant = value || defaultVariant
    // There is also an open issue on this one: https://github.com/palantir/tslint/issues/3279
    "strict-boolean-expressions": false,
    "typedef": [
      true,
      "call-signature",
      "parameter",
      // Removed as this could be result in a lot of pollution when piping RxJS operators and array functions
      // "arrow-parameter",
      "property-declaration"
    ],
    "trailing-comma": [
      true,
      {
        "multiline": {
          "objects": "always",
          "arrays": "always",
          // Disabled as this would lead to an undefined last arguments in every function with multiline arguments
          "functions": "never",
          "typeLiterals": "ignore"
        },
        "esSpecCompliant": true
      }
    ],
    "variable-name": [
      true,
      "ban-keywords",
      "check-format",
      "allow-leading-underscore"
    ],
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-separator",
      "check-type",
      "check-preblock"
    ],

    // Custom Rules
    "ts-loader": true
  }
}
